<?xml version="1.0" encoding="UTF-8"?>
<chapter id="index"><?dbhtml dir="bitcoin" ?>
	<title>BitCoin</title>
	<section>
		<title>私钥</title>
		<para>它一个256bit的随机数，一般随机生成，范围在0x1到0xFFFF FFFF FFFF FFFF FFFF FFFF FFFF FFFE BAAE DCE6 AF48 A03B BFD2 5E8C D036 4140之间（这是由ECDSA spec256k1算法限定的）</para>
	</section>

	<section id="bitcoin.wallet">
		<title>比特币钱包</title>
		<section>
			<title>Bitcoin Core</title>

			<graphic format="png" fileref="../images/bitcoin/wallet/bitcoin1.png" width="" srccredit="netkiller" />
			<graphic format="png" fileref="../images/bitcoin/wallet/bitcoin2.png" width="" srccredit="netkiller" />
			<graphic format="png" fileref="../images/bitcoin/wallet/bitcoin3.png" width="" srccredit="netkiller" />

			<para>
				获得测试比特币
				<ulink url="https://testnet.manu.backend.hamburg/faucet" />
			</para>
		</section>
		<section id="">
			<title>网页钱包</title>
		</section>
		<section id="Coin.Space">
			<title>Coin.Space</title>
			<para>
				<ulink url="https://coin.space/?network=bitcoin" />
			</para>
			response enter major zero net chief universe liquid ignore bean crash stand
		</section>
		<section id="">
			<title>BitGo</title>
			<para>
				<ulink url="https://www.bitgo.com/login" />
			</para>
		</section>
		<section id="">
			<title>GreenAddress</title>
			<para>
				<ulink url="https://greenaddress.it/en/" />
			</para>
		</section>

	</section>
	<section id="bcoin">
		<title>bcoin</title>
		<para>A Fullnode Bitcoin Implementation for Miners, Wallets, and Exchanges</para>
		<para>
			<ulink url="bcoin.io/" />
		</para>
		<screen>
		<![CDATA[
$ npm install bcoin
		]]>
		</screen>
		<para>设置比特币测试网节点</para>
		<programlisting>
		<![CDATA[
'use strict';

var bcoin = require('bcoin');

var node = new bcoin.fullnode({
  network: 'testnet',
  db: 'memory'
});

(async function() {
  await node.open();
  await node.connect();

  node.on('connect', function(entry, block) {
    console.log('%s (%d) added to chain.', entry.rhash(), entry.height);
  });

  node.on('tx', function(tx) {
    console.log('%s added to mempool.', tx.txid());
  });

  node.startSync();
})();
		]]>
		</programlisting>
	</section>
	<section>
		<title>HD Wallet</title>
		<para></para>
		<screen>
		<![CDATA[
npm install bip39 bitcoinjs-lib
		]]>
		</screen>
		<para></para>
		<programlisting>
		<![CDATA[
	const bip39 = require('bip39');
    const bitcoin = require('bitcoinjs-lib')

    const mnemonic = bip39.generateMnemonic();
    const seed = bip39.mnemonicToSeed(mnemonic);
	const root = bitcoin.HDNode.fromSeedBuffer(seed)
	//const root = bitcoin.HDNode.fromSeedHex(seed.toString('hex'))
    const wallet = root.derivePath("m/44'/0'/0'/0/0");

    const address = wallet.getAddress();
    const wif = wallet.keyPair.toWIF();

	console.log(mnemonic)
    console.log(address)
    console.log(wif)		
		]]>
		</programlisting>
	</section>

</chapter>