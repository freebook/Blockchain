<?xml version="1.0" encoding="UTF-8"?>
<chapter id="eos.setup">
	<title>EOS 安装</title>
	<section>
		<title>CentOS 8 Stream RPM包安装</title>
		<para>
			下载 RPM 包
			<ulink url="https://github.com/EOSIO/eos/releases" />
		</para>
		<screen>
		<![CDATA[
[root@netkiller ~]# wget -c https://github.com/EOSIO/eos/releases/download/v2.0.13/eosio-2.0.13-1.el7.x86_64.rpm
[root@netkiller ~]# dnf install eosio-2.0.13-1.el7.x86_64.rpm 
		]]>
		</screen>
		<para>查看 RPM 包中有那些文件</para>
		<screen>
		<![CDATA[
[root@testing ~]# rpm -ql eosio-2.0.13-1.el7.x86_64.rpm 
/usr/bin/cleos
/usr/bin/eosio-blocklog
/usr/bin/keosd
/usr/bin/nodeos
/usr/bin/trace_api_util
/usr/opt/eosio/2.0.13/bin/cleos
/usr/opt/eosio/2.0.13/bin/eosio-blocklog
/usr/opt/eosio/2.0.13/bin/keosd
/usr/opt/eosio/2.0.13/bin/nodeos
/usr/opt/eosio/2.0.13/bin/trace_api_util
/usr/opt/eosio/2.0.13/licenses/LICENSE
/usr/opt/eosio/2.0.13/licenses/LICENSE.eos-vm
/usr/opt/eosio/2.0.13/licenses/LICENSE.go
/usr/opt/eosio/2.0.13/licenses/LICENSE.rapidjson
/usr/opt/eosio/2.0.13/licenses/LICENSE.secp256k1
/usr/opt/eosio/2.0.13/licenses/LICENSE.softfloat
/usr/opt/eosio/2.0.13/licenses/LICENSE.wabt
/usr/opt/eosio/2.0.13/licenses/LICENSE.wavm
/usr/opt/eosio/2.0.13/licenses/LICENSE.yubihsm
		]]>
		</screen>
	</section>
	<section id="eos.centos">
		<title>CentOS 7 源码安装</title>

		<screen>
		<![CDATA[ 
yum install -y centos-release-scl
yum install -y devtoolset-7
yum install -y git

yum install -y gcc gcc-c++ make patch cmake automake autoconf \
libtool ocaml doxygen graphviz-devel libicu-devel bzip2-devel gmp-devel python-devel gettext-devel


cd /usr/local/src/
git clone https://github.com/EOSIO/eos --recursive
cd eos/
# git submodule update --init --recursive

./eosio_build.sh
		]]>
		</screen>
		<para></para>
		<screen>
		<![CDATA[
[root@iZj6c7cj14ulhfndlmeicbZ eos]# ./eosio_build.sh

	Beginning build version: 1.2
	Wed May  2 03:15:34 UTC 2018
	User: root
	git head id: f537bc50b21a7807ff0ee3af83d8f560ce09afa5
	Current branch: * master

	ARCHITECTURE: Linux

	OS name: CentOS Linux
	OS Version: 7
	CPU speed: 2494Mhz
	CPU cores: 4
	Physical Memory: 7822 Mgb
	Disk install: /dev/vda1
	Disk space total: 492G
	Disk space available: 138G

	Checking Yum installation
	Yum installation found at /usr/bin/yum.

	Checking installation of Centos Software Collections Repository.

	The Centos Software Collections Repository, devtoolset-7 and Python3 are required to install EOSIO.
	Do you wish to install and enable this repository, devtoolset-7 and Python3 packages?
1) Yes
2) No
#? 1
		]]>
		</screen>
		<para>输入 1 回车继续</para>
		<para></para>
		<screen>
		<![CDATA[
Complete!

	YUM repository successfully updated.

	Checking YUM for installed dependencies.

	Package git found.
	Package autoconf found.
	Package automake found.
	Package libtool  NOT  found.
	Package ocaml.x86_64  NOT  found.
	Package doxygen  NOT  found.
	Package graphviz-devel.x86_64  NOT  found.
	Package libicu-devel.x86_64  NOT  found.
	Package bzip2-devel.x86_64  NOT  found.
	Package openssl-devel.x86_64  NOT  found.
	Package gmp-devel.x86_64  NOT  found.
	Package python-devel.x86_64  NOT  found.
	Package gettext-devel.x86_64  NOT  found.

	The following dependencies are required to install EOSIO.

	1. libtool
	2. ocaml.x86_64
	3. doxygen
	4. graphviz-devel.x86_64
	5. libicu-devel.x86_64
	6. bzip2-devel.x86_64
	7. openssl-devel.x86_64
	8. gmp-devel.x86_64
	9. python-devel.x86_64
	10. gettext-devel.x86_64


	Do you wish to install these dependencies?
1) Yes
2) No
#?
		]]>
		</screen>
		<para>输入 1 回车继续</para>
		<screen>
			<![CDATA[

	 _______  _______  _______ _________ _______
	(  ____ \(  ___  )(  ____ \\__   __/(  ___  )
	| (    \/| (   ) || (    \/   ) (   | (   ) |
	| (__    | |   | || (_____    | |   | |   | |
	|  __)   | |   | |(_____  )   | |   | |   | |
	| (      | |   | |      ) |   | |   | |   | |
	| (____/\| (___) |/\____) |___) (___| (___) |
	(_______/(_______)\_______)\_______/(_______)

	EOSIO has been successfully built. 01:20:59

	To verify your installation run the following commands:

	/root/opt/mongodb/bin/mongod -f /root/opt/mongodb/mongod.conf &
	source /opt/rh/python33/enable
	export PATH=${HOME}/opt/mongodb/bin:$PATH
	cd /usr/local/src/eos/build; make test

	For more information:
	EOSIO website: https://eos.io
	EOSIO Telegram channel @ https://t.me/EOSProject
	EOSIO resources: https://eos.io/resources/
	EOSIO Stack Exchange: https://eosio.stackexchange.com
	EOSIO wiki: https://github.com/EOSIO/eos/wiki
			
			]]>
		</screen>
		<para>这里跳过 make test 直接安装</para>
		<screen>
		<![CDATA[
cd build
make install
		]]>
		</screen>
		<para>默认配置文件 cofnig.ini</para>
		<screen>
		<![CDATA[
[root@netkiller config]# grep -v "^#" config.ini | grep -v "^$"
bnet-endpoint = 0.0.0.0:4321
bnet-follow-irreversible = 0
bnet-no-trx = false
bnet-peer-log-format = ["${_name}" ${_ip}:${_port}]
blocks-dir = "blocks"
chain-state-db-size-mb = 1024
reversible-blocks-db-size-mb = 340
contracts-console = false
https-client-validate-peers = 1
http-server-address = 127.0.0.1:8888
access-control-allow-credentials = false
max-body-size = 1048576
verbose-http-errors = false
p2p-listen-endpoint = 0.0.0.0:9876
p2p-max-nodes-per-host = 1
agent-name = "EOS Test Agent"
allowed-connection = any
max-clients = 25
connection-cleanup-period = 30
network-version-match = 0
sync-fetch-span = 100
max-implicit-request = 1500
use-socket-read-watermark = 0
peer-log-format = ["${_name}" ${_ip}:${_port}]
enable-stale-production = false
pause-on-startup = false
max-transaction-time = 30
max-irreversible-block-age = -1
signature-provider = EOS6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV=KEY:5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3
keosd-provider-timeout = 5
txn-reference-block-lag = 0
wallet-dir = "."
unlock-timeout = 900		
		]]>
		</screen>
	</section>
	<section id="eos.mac">
		<title>Mac</title>
		<screen>
			<![CDATA[
git clone https://github.com/eosio/eos --recursive

cd eos
cmake .
make
			]]>
		</screen>
	</section>
	<section id="eos.docker">
		<title>Docker 开发环境</title>
		<!-- https://developers.eos.io/eosio-nodeos/docs/docker-quickstart -->
		<screen>
		<![CDATA[
#进入容器内
docker exec -it eosio /bin/bash
#也可直接调用cleos的命令
docker exec eosio cleos get account eosio		
		]]>
		</screen>
	</section>

	<section id="eos.mainnet">
		<title>主网</title>
		<screen>
		<![CDATA[
git clone https://github.com/EOS-Mainnet/eos -b mainnet-1.0.7
cd eos
git submodule update --init --recursive
./eosio_build.sh -s EOS

cd build
make install
cd ~
wget https://eosnodes.privex.io/static/genesis.json
nodeos --genesis-json genesis.json
# 输入 ctrl-c 退出

vim ~/.local/share/eosio/nodeos/config/config.ini
# 配置节点从这里获取 https://eosnodes.privex.io/?config=1

# 最后启动 eosio

nodeos		
		
		]]>
		</screen>
	</section>

	<section id="eos.launch">
		<title>启动 EOS 节点</title>
		<section id="eos.private">
			<title>EOS 本地网</title>

			<section>
				<title>单节点私链</title>
				<para>这种模式一般用于合约开发，学习和测试</para>
				<screen>
			<![CDATA[
nodeos -e -p eosio --plugin eosio::chain_api_plugin --plugin eosio::history_api_plugin --plugin eosio::wallet_api_plugin
			]]>
				</screen>
				<para>区块数据保存在 ~/.local/share/eosio/nodeos/data</para>
				<screen>
			<![CDATA[
[root@netkiller ~]# find ~/.local/share/eosio/nodeos/data
/root/.local/share/eosio/nodeos/data
/root/.local/share/eosio/nodeos/data/blocks
/root/.local/share/eosio/nodeos/data/blocks/blocks.index
/root/.local/share/eosio/nodeos/data/blocks/reversible
/root/.local/share/eosio/nodeos/data/blocks/reversible/shared_memory.meta
/root/.local/share/eosio/nodeos/data/blocks/reversible/shared_memory.bin
/root/.local/share/eosio/nodeos/data/blocks/blocks.log
/root/.local/share/eosio/nodeos/data/state
/root/.local/share/eosio/nodeos/data/state/shared_memory.meta
/root/.local/share/eosio/nodeos/data/state/shared_memory.bin			
			]]>
				</screen>
				<para>本地私链会提示 warning: transaction executed locally, but may not be confirmed by the network yet. </para>
			</section>

			<section>
				<title>单机多节点</title>
				<para>https://github.com/EOSIO/eos/wiki/Testnet-Single-Host-Multinode</para>
				<para>EOS 有三个模块组成分别是nodeos，keosd，和cleos。nodeos 是节点进程，keosd 是钱包服务，cleos 是命令行接口。实现单机多节点主要工作在于怎样配置 nodeos 进程，使其端口不冲突。</para>

			</section>
			<section>
				<title>多机多节点</title>
				<para>多级多节点配置只需要将其他节点的IP加入到 p2p-peer-address 池中即可，配置项涉及一下：</para>
				<screen>
			<![CDATA[
[root@iZj6c39y62jl5b1wmfv6u8Z config]# grep -v "^#" ~/.local/share/eosio/nodeos/config/config.ini | grep -v "^$"

p2p-peer-address = node1:9876
...
...
p2p-peer-address = node(n):9876
agent-name: 改成你自己的标识, 域名或其他.
producer-name: 节点账户名(12位[12345a-z]字符串).	
signature-provider: 你的密钥对.
		
			]]>
				</screen>
				<para>准备几台服务器或者云主机</para>
				<screen>
			<![CDATA[
Node1 172.16.0.10
Node2 172.16.0.20
Node3 172.16.0.30			
			]]>
				</screen>
				<para>创世区块 genesis.json</para>
				<screen>
			<![CDATA[
{
  "initial_timestamp": "2018-06-01T00:00:00.000",
  "initial_key": "EOS69EZcBVwgRz3AbHheR3ZpeHtaoHAPyLXfvmsiqYMAtazN3WdiL",
  "initial_configuration": {
    "max_block_net_usage": 1048576,
    "target_block_net_usage_pct": 1000,
    "max_transaction_net_usage": 524288,
    "base_per_transaction_net_usage": 12,
    "net_usage_leeway": 500,
    "context_free_discount_net_usage_num": 20,
    "context_free_discount_net_usage_den": 100,
    "max_block_cpu_usage": 100000,
    "target_block_cpu_usage_pct": 500,
    "max_transaction_cpu_usage": 50000,
    "min_transaction_cpu_usage": 100,
    "max_transaction_lifetime": 3600,
    "deferred_trx_expiration_window": 600,
    "max_transaction_delay": 3888000,
    "max_inline_action_size": 4096,
    "max_inline_action_depth": 4,
    "max_authority_depth": 6,
    "max_generated_transaction_count": 16
  },
  "initial_chain_id": "0000000000000000000000000000000000000000000000000000000000000000"
}
			]]>
				</screen>
				<section>
					<title>节点一</title>
					<para>编辑配置文件 ~/.local/share/eosio/nodeos/config/config.ini</para>
					<screen>
				<![CDATA[
p2p-peer-address = 172.16.0.20:9876
p2p-peer-address = 172.16.0.30:9876
agent-name = "EOS Test Agent - Node 1"
producer-name = eosio
signature-provider = EOS6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV=KEY:5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3
				]]>
					</screen>
					<para>启动 nodeos 进程</para>
					<screen>
				<![CDATA[
nodeos --genesis-json genesis.json	
				]]>
					</screen>
				</section>
				<section>
					<title>节点二</title>
					<para>编辑配置文件 ~/.local/share/eosio/nodeos/config/config.ini</para>
					<screen>
				<![CDATA[
p2p-peer-address = 172.16.0.10:9876
p2p-peer-address = 172.16.0.30:9876
agent-name = "EOS Test Agent - Node 2"
producer-name = eosio
signature-provider = EOS6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV=KEY:5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3
				]]>
					</screen>
					<para>启动 nodeos 进程</para>
				</section>
				<section>
					<title>节点三</title>
					<para>编辑配置文件 ~/.local/share/eosio/nodeos/config/config.ini</para>
					<screen>
				<![CDATA[
p2p-peer-address = 172.16.0.10:9876
p2p-peer-address = 172.16.0.20:9876
agent-name = "EOS Test Agent - Node 3"
producer-name = eosio
signature-provider = EOS6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV=KEY:5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3
				]]>
					</screen>
					<para>启动 nodeos 进程</para>
				</section>
				<section>
					<title>进入 Node 1 创建钱包和部署合约</title>
					<screen>
				<![CDATA[
cleos wallet create
cleos wallet unlock

# 导入eosio账户的私钥到钱包，signature-provider 中的 KEY:是私钥
cleos wallet import 5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3

cleos create key
cleos create account eosio eosio.token <公钥> <公钥>

cleos set contract eosio /usr/local/src/eos/build/contracts/eosio.bios -p eosio

# 发布eosio.token合约
cleos set contract eosio.token  /usr/local/src/eos/build/contracts/eosio.token

# 创建和发布代币
cleos  push action eosio.token create '["eosio","1000000000.0000 EOS",0,0,0]' -p eosio.token
cleos  push action eosio.token issue '["eosio","1000000000.0000 EOS","issue"]' -p eosio

# 查询代币数量
cleos get currency balance eosio.token eosio

# 部署eosio.system合约
cleos set contract eosio /usr/local/src/eos/build/contracts/eosio.system

# 创建账号
cleos create key
cleos system newaccount eosio test <公钥> <公钥> --stake-net '50.00 EOS' --stake-cpu '50.00 EOS'

# 登录 Node 2 注册成为 bp
cleos  system regproducer test <公钥> http://127.0.0.1:8888

# 给创建的账户转账
cleos push action eosio.token transfer '["eosio", "test","100000000.0000 EOS","vote"]' -p eosio

# 锁定代币
cleos system delegatebw test test '25000000.0000 EOS' '25000000.0000 EOS' --transfer

# 给出块节点投票
cleos system voteproducer prods test test
				]]>
					</screen>
				</section>
			</section>
		</section>
		<section id="eos.testnet">
			<title>测试网</title>
			<section id="eos.testnet.endpoints">
				<title>Public Testnet Endpoints（公共测试网络的接入点）</title>
				<section>
					<title>testnet1.eos.io</title>
					<para></para>
					<screen>
				<![CDATA[
HTTP Endpoint: testnet1.eos.io
P2P Endpoint: p2p-testnet1.eos.io:9876
Web Wallet Endpoint: t1wallet.eos.io, t1api.eos.io, t1readonly.eos.io

$ curl testnet1.eos.io/v1/chain/get_info		
				]]>
					</screen>
				</section>
				<section>
					<title>http://testnet.eoswtz.com</title>
					<para>http://www.eoswtz.com</para>
					<screen>
				<![CDATA[

				]]>
					</screen>
					<para></para>
				</section>
			</section>

			<section>
				<title>本地连接到测试网</title>
				<para>修改config.ini文件</para>
				<screen>
			<![CDATA[
p2p-peer-address = p2p-testnet1.eos.io
block-interval-seconds = 2
			]]>
				</screen>
			</section>

			<section>
				<title>EOS (testnet) Explorer (Dawn 2.0)</title>
				<para>http://eosmonitor.info</para>
			</section>
			<section>
				<title>EOS Jungle Testnet Monitor (Dawn 4.0)</title>
				<para>
					<ulink url="http://dev.cryptolions.io" />
				</para>
			</section>
		</section>
		<section id="eos.mainnet">
			<title>主网</title>
			<section>
				<title>创世区块</title>
				<screen>
			<![CDATA[
https://github.com/EOS-Mainnet/eos/blob/mainnet-1.0.7/mainnet-genesis.json			
			]]>
				</screen>

			</section>

			<section>
				<title>eosnodes.privex.io</title>
				<para>https://eosnodes.privex.io</para>
				<screen>
		<![CDATA[
[root@netkiller build]# cleos -u http://api.eosnewyork.io get info 
{
  "server_version": "1509de21",
  "chain_id": "aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906",
  "head_block_num": 3185805,
  "last_irreversible_block_num": 3185470,
  "last_irreversible_block_id": "00309b3e25263b1f6cef6a87a304284afcc06bacd1290e6904760395e07d2321",
  "head_block_id": "00309c8d9f01ba0ac66bd577cdfdd4e85162ba1d68e18f5660356bc8207615b1",
  "head_block_time": "2018-06-29T02:46:41.000",
  "head_block_producer": "eosisgravity",
  "virtual_block_cpu_limit": 200000000,
  "virtual_block_net_limit": 1048576000,
  "block_cpu_limit": 198989,
  "block_net_limit": 1048304
}
		]]>
				</screen>
				<section>
					<title>创世区块</title>
					<para>https://eosnodes.privex.io/static/genesis.json</para>
					<screen>
		<![CDATA[
{
  "initial_timestamp": "2018-06-08T08:08:08.888",
  "initial_key": "EOS7EarnUhcyYqmdnPon8rm7mBCTnBoot6o7fE2WzjvEX2TdggbL3",
  "initial_configuration": {
    "max_block_net_usage": 1048576,
    "target_block_net_usage_pct": 1000,
    "max_transaction_net_usage": 524288,
    "base_per_transaction_net_usage": 12,
    "net_usage_leeway": 500,
    "context_free_discount_net_usage_num": 20,
    "context_free_discount_net_usage_den": 100,
    "max_block_cpu_usage": 200000,
    "target_block_cpu_usage_pct": 1000,
    "max_transaction_cpu_usage": 150000,
    "min_transaction_cpu_usage": 100,
    "max_transaction_lifetime": 3600,
    "deferred_trx_expiration_window": 600,
    "max_transaction_delay": 3888000,
    "max_inline_action_size": 4096,
    "max_inline_action_depth": 4,
    "max_authority_depth": 6
  }
}		
		]]>
					</screen>
					<para>检查创世区块配置是否正确</para>
					<screen>
			<![CDATA[
[root@netkiller build]# cleos -u http://api.eosnewyork.io get info 
{
  "server_version": "1509de21",
  "chain_id": "aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906",
  "head_block_num": 3185805,
  "last_irreversible_block_num": 3185470,
  "last_irreversible_block_id": "00309b3e25263b1f6cef6a87a304284afcc06bacd1290e6904760395e07d2321",
  "head_block_id": "00309c8d9f01ba0ac66bd577cdfdd4e85162ba1d68e18f5660356bc8207615b1",
  "head_block_time": "2018-06-29T02:46:41.000",
  "head_block_producer": "eosisgravity",
  "virtual_block_cpu_limit": 200000000,
  "virtual_block_net_limit": 1048576000,
  "block_cpu_limit": 198989,
  "block_net_limit": 1048304
}
[root@netkiller build]# cleos get info
{
  "server_version": "90fefdd1",
  "chain_id": "cf057bbfb72640471fd910bcb67639c22df9f92470936cddc1ade0e2f2e7dc4f",
  "head_block_num": 26364,
  "last_irreversible_block_num": 26363,
  "last_irreversible_block_id": "000066fbb919e9e7613765190b7e2e6639588d36e834da77ab63f7cc43d04ec2",
  "head_block_id": "000066fc54c27265bb243a3ef19923a54b52ab1cb568e067fb2f83ebcf9d1d26",
  "head_block_time": "2018-06-29T02:46:56.000",
  "head_block_producer": "eosio",
  "virtual_block_cpu_limit": 200000000,
  "virtual_block_net_limit": 1048576000,
  "block_cpu_limit": 199900,
  "block_net_limit": 1048576
}			
			]]>
					</screen>
					<para>对比两次 chain_id 是否一致，一致表示配置正确。</para>
				</section>
				<section>
					<title>主网超级节点</title>
					<para>https://eosnodes.privex.io/?config=1</para>
					<screen>
			<![CDATA[
p2p-peer-address = 106.10.42.238:9876
p2p-peer-address = 123.59.116.52:49876
p2p-peer-address = 13.230.91.225:9865
p2p-peer-address = 130.211.59.178:9876
p2p-peer-address = 159.65.214.150:9876
p2p-peer-address = 173.242.25.101:7115
p2p-peer-address = 178.49.174.48:9876
p2p-peer-address = 18.191.33.148:59876
p2p-peer-address = 185.253.188.1:19876
p2p-peer-address = 185.253.188.1:19877
p2p-peer-address = 195.43.95.98:9876
p2p-peer-address = 34.252.209.121:5556
p2p-peer-address = 35.197.190.234:19878
p2p-peer-address = 40.114.68.16:9876
p2p-peer-address = 54.153.59.31:9999
p2p-peer-address = 807534da.eosnodeone.io:19872
p2p-peer-address = 94.130.250.22:9806
p2p-peer-address = api-full1.eoseoul.io:9876
p2p-peer-address = api-full2.eoseoul.io:9876
p2p-peer-address = api.eosuk.io:12000
p2p-peer-address = boot.eostitan.com:9876
p2p-peer-address = bp.antpool.com:443
p2p-peer-address = bp.cryptolions.io:9876
p2p-peer-address = bp.eosbeijing.one:8080
p2p-peer-address = bp.eosmedi.com:9877
p2p-peer-address = bp.libertyblock.io:9800
p2p-peer-address = dc1.eosemerge.io:9876
p2p-peer-address = dns1-p2p.oraclechain.io:49876
p2p-peer-address = eno.eosvan.io:19866
p2p-peer-address = eos-seed-de.privex.io:9876
p2p-peer-address = eos.infinitystones.io:9876
p2p-peer-address = eos.nodepacific.com:9876
p2p-peer-address = eos.staked.us:9870
p2p-peer-address = eosapi.blockmatrix.network:13546
p2p-peer-address = eosboot.chainrift.com:9876
p2p-peer-address = eosbp.buildteam.io:8532
p2p-peer-address = eosbp.eosvillage.io:8181
p2p-peer-address = eosnode.fi:9888
p2p-peer-address = eu-west-nl.eosamsterdam.net:9876
p2p-peer-address = eu1.eosdac.io:49876
p2p-peer-address = fn001.eossv.org:443
p2p-peer-address = fullnode.acroeos.one:9876
p2p-peer-address = fullnode.eoslaomao.com:443
p2p-peer-address = mainnet-eos.wancloud.cloud:55576
p2p-peer-address = mainnet.eos.ren:9376
p2p-peer-address = mainnet.eosarabia.org:3571
p2p-peer-address = mainnet.eoscalgary.io:5222
p2p-peer-address = mainnet.eoseco.com:10010
p2p-peer-address = mainnet.eospay.host:19876
p2p-peer-address = mainnet.eoswz.com:8866
p2p-peer-address = mainnet2.eostaxrelief.com:9876
p2p-peer-address = mars.fnp2p.eosbixin.com:443
p2p-peer-address = node.eos.lawyer:9876
p2p-peer-address = node.eosflare.io:1883
p2p-peer-address = node.eosio.lt:9878
p2p-peer-address = node.eosmeso.io:9876
p2p-peer-address = node1.eosjapan.co.jp:9876
p2p-peer-address = node1.eosnewyork.io:6987
p2p-peer-address = node2.blockeos.io:9987
p2p-peer-address = node2.eosarmy.io:3330
p2p-peer-address = node2.eosnewyork.io:6987
p2p-peer-address = node2.eosphere.io:9876
p2p-peer-address = p.jeda.one:3322
p2p-peer-address = p2p.eos.bitspace.no:9876
p2p-peer-address = p2p.eosdetroit.io:3018
p2p-peer-address = p2p.eosholding.ca:9876
p2p-peer-address = p2p.eosio.cr:1976
p2p-peer-address = p2p.eosio.cr:5418
p2p-peer-address = p2p.genereos.io:9876
p2p-peer-address = p2p.mainnet.eosgermany.online:9876
p2p-peer-address = p2p.mainnet.eospace.io:88
p2p-peer-address = p2p.meet.one:9876
p2p-peer-address = p2p.one.eosdublin.io:9876
p2p-peer-address = p2p.saltblock.io:19876
p2p-peer-address = p2p.two.eosdublin.io:9876
p2p-peer-address = peer.blockgenicbp.com:9876
p2p-peer-address = peer.eosio.sg:9876
p2p-peer-address = peer.eosjrr.io:9876
p2p-peer-address = peer.eosn.io:9876
p2p-peer-address = peer.main.alohaeos.com:9876
p2p-peer-address = peer1.eos.csx.io:9806
p2p-peer-address = peer1.eosthu.com:8080
p2p-peer-address = peer1.mainnet.eos.store:80
p2p-peer-address = peer1.mainnet.helloeos.com.cn:80
p2p-peer-address = peer2.eos.csx.io:9806
p2p-peer-address = peer2.eosthu.com:8080
p2p-peer-address = peer2.mainnet.helloeos.com.cn:80
p2p-peer-address = peering.dutcheos.io:9876
p2p-peer-address = peering.mainnet.eoscanada.com:9876
p2p-peer-address = peering1.mainnet.eosasia.one:80
p2p-peer-address = peering2.mainnet.eosasia.one:80
p2p-peer-address = pub0.eosys.io:6637
p2p-peer-address = pub1.eostheworld.io:9876
p2p-peer-address = pub1.eosys.io:6637
p2p-peer-address = pub2.eostheworld.io:9876
p2p-peer-address = publicnode.cypherglass.com:9876
p2p-peer-address = seed1.greymass.com:9876
p2p-peer-address = seed2.greymass.com:9876			
			]]>
					</screen>
				</section>
			</section>
			<section>
				<title>mainnet.genereos.io</title>
				<screen>
			<![CDATA[
[root@netkiller ~]# cleos --url=http://mainnet.genereos.io get info
{
  "server_version": "b195012b",
  "chain_id": "aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906",
  "head_block_num": 3218632,
  "last_irreversible_block_num": 3218299,
  "last_irreversible_block_id": "00311b7b6a24585e4a1fd806f619ca075fe9c72fa0310b6ca465e91aad33999c",
  "head_block_id": "00311cc8bb55e1c6d2ec9c1455908545ecee293efa556c1dce444814cf891611",
  "head_block_time": "2018-06-29T07:20:16.000",
  "head_block_producer": "teamgreymass",
  "virtual_block_cpu_limit": 200000000,
  "virtual_block_net_limit": 1048576000,
  "block_cpu_limit": 199900,
  "block_net_limit": 1048576
}
			]]>
				</screen>
			</section>
			<!-- <section > <title>https://eosauthority.com</title> </section> -->
			<section id="mainnet.eoswz.com">
				<title>mainnet.eoswz.com</title>
				<screen>
			<![CDATA[
[root@netkiller ~]# cleos -u http://mainnet.eoswz.com get info
{
  "server_version": "aa351733",
  "chain_id": "aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906",
  "head_block_num": 3221149,
  "last_irreversible_block_num": 3220819,
  "last_irreversible_block_id": "003125538662bf4cdc367336daba8a8609d6b4f5edb6e8bf0189a27fa306fbde",
  "head_block_id": "0031269d3ee1f2b8dbc9419a9d8ac0be7024c3a072d9f178ce297dbea6cbb58e",
  "head_block_time": "2018-06-29T07:41:14.500",
  "head_block_producer": "teamgreymass",
  "virtual_block_cpu_limit": 200000000,
  "virtual_block_net_limit": 1048576000,
  "block_cpu_limit": 199900,
  "block_net_limit": 1048576
}			
			]]>
				</screen>
			</section>
		</section>
	</section>
	<section>
		<title>区块数据同步到 mongodb</title>
		<screen>
		<![CDATA[
nodeos -e -p testmongodb \
--plugin eosio::producer_plugin \
--plugin eosio::chain_api_plugin \
--plugin eosio::net_api_plugin \
--max-transaction-time=30000 \
--http-server-address 127.0.0.1:4444 \
--p2p-listen-endpoint 127.0.0.1:8778 \
--p2p-peer-address 127.0.0.1:9877 \
--config-dir data/testsynblock \
--data-dir data/testsynblock \
--contracts-console --abi-serializer-max-time-ms 5000 \
--plugin eosio::mongo_db_plugin --mongodb-uri mongodb://eos:eos@192.168.30.10:27017/test?authSource=admin&maxPoolSize=100 \
--mongodb-filter-out eosio:onblock:

		
nohup  nodeos -e -p testmongodb \
--plugin eosio::producer_plugin \
--plugin eosio::chain_api_plugin \
--plugin eosio::net_api_plugin \
--max-transaction-time=30000 \
--http-server-address 127.0.0.1:4444 \
--p2p-listen-endpoint 127.0.0.1:8778 \
--p2p-peer-address 127.0.0.1:9877 \
--config-dir data/testsynblock \
--data-dir data/testsynblock \
--contracts-console --abi-serializer-max-time-ms 5000 \
--plugin eosio::mongo_db_plugin --mongodb-uri mongodb://eos:eos@192.168.30.10:27017/eos?authSource=eos&maxPoolSize=100 \
--mongodb-filter-out eosio:onblock:   >>eosio_test_mongodb.log 2>&1 &		
		
nodeos -e -p mongodbblock \
--plugin eosio::producer_plugin \
--plugin eosio::chain_api_plugin \
--plugin eosio::net_api_plugin \
--plugin eosio::mongo_db_plugin \
--max-transaction-time=30000  \
--http-server-address 127.0.0.1:6666 
--p2p-listen-endpoint 127.0.0.1:9878 
--p2p-peer-address 127.0.0.1:9877 
--config-dir data/synblock 
--data-dir data/synblock 
--contracts-console 
--abi-serializer-max-time-ms 5000 
--mongodb-uri mongodb://eos:eos@127.0.0.1:27017/eos 
--mongodb-filter-out eosio:onblock:

nodeos -e -p eosio \
--data-dir data/eosio 
--config-dir data/eosio 
--max-transaction-time=30000 
--contracts-console 
--filter-on=* 
--http-server-address 0.0.0.0:8888 
--p2p-max-nodes-per-host 10 
--p2p-listen-endpoint 127.0.0.1:9876 
--p2p-peer-address 127.0.0.1:9877 
--plugin eosio::producer_plugin 
--plugin eosio::chain_api_plugin 
--plugin eosio::net_api_plugin 
--http-validate-host 0 
--chain-state-db-size-mb 61440


nodeos -e -p accountpro1 \
--plugin eosio::producer_plugin 
--max-transaction-time=30000 
--plugin eosio::chain_api_plugin 
--plugin eosio::net_api_plugin 
--p2p-max-nodes-per-host 10 
--http-server-address 127.0.0.1:7778 
--p2p-listen-endpoint 127.0.0.1:9877 
--p2p-peer-address 127.0.0.1:9876 
--config-dir data/node1 --data-dir data/node1 
--private-key ["EOSydanWnaV95EvkwtwCCD9NX1EZNSpNeBJwdVyU2fM7jmkq5mNhZ","mt6XU1ybgAAM6XD5rebPF7bFrCgbVBG7Jg1NzE5JuUub5nCJxiu"] 
--contracts-console 
--filter-on=* 
--chain-state-db-size-mb 61440

keosd --http-server-address=127.0.0.1:8900  --https-server-address  --unix-socket-path keosd.sock
		]]>
		</screen>
	</section>
	<section id="eos.config.ini">
		<title>nodeos 命令</title>
		<section>
			<title></title>
			<section>
				<title>--contracts-console</title>
				<para>--contracts-console 开启合约调试模式，合约中的 eosio:print() 将输出到控制台。</para>
			</section>
		</section>
		<section>
			<title>config.ini 配置文件</title>
			<section>
				<title>插件配置</title>
				<screen>
				<![CDATA[
plugin = eosio::producer_plugin
plugin = eosio::wallet_api_plugin
plugin = eosio::chain_api_plugin
plugin = eosio::http_plugin		
				]]>
				</screen>
				<para></para>
				<screen>
				<![CDATA[
plugin = eosio::chain_plugin			
				]]>
				</screen>
			</section>
		</section>
	</section>
	<section>
		<title>systemd</title>
		<screen>
		<![CDATA[
$ vim /etc/systemd/system/nodeos.service 
		
[Unit]
Description=EOS nodeos systemd by netkiller
Documentation=http://www.netkiller.cn/
After=network.target

[Service]
Type=forking
User=root
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity
Environment=PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin:/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin
Environment=CONFIG=
WorkingDirectory=/opt/eos
PIDFile=/var/run/nodeos.pid
Restart=on-failure

ExecStart=nodeos -e -p eosio \
--plugin eosio::producer_plugin 
--plugin eosio::chain_api_plugin \
--plugin eosio::history_plugin \
--plugin eosio::history_api_plugin \
--plugin eosio::http_plugin \
--plugin eosio::net_api_plugin \
--http-server-address=0.0.0.0:8888 \
--access-control-allow-origin=* \
--contracts-console \
--http-validate-host=false \
--filter-on='*' \
--chain-state-db-size-mb=2048 \
--p2p-peer-address 127.0.0.1:9877 \
--plugin eosio::mongo_db_plugin \ 
--mongodb-uri=mongodb://eos:eos@127.0.0.1:27017/test?authSource=eos&maxPoolSize=100 \
--mongodb-filter-out eosio:onblock:
--mongodb-filter-on=addressbook:: 
--mongodb-filter-on=test1:: 
ExecReload=     
ExecStop=

[Install]
WantedBy=multi-user.target		
		]]>
		</screen>
	</section>
</chapter>